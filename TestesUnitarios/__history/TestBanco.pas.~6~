unit TestBanco;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, GeraBoleto.Banco;

type
  // Test methods for class TBanco

  TestTBanco = class(TTestCase)
  strict private
    FBanco: TBanco;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestNumeroBancoComEspacos;
    procedure TestDigitoNumeroComEspacos;
    procedure TestNumeroBancoComCaracteresInvalidos;
  end;

implementation

procedure TestTBanco.SetUp;
begin
  FBanco := TBanco.Create;
end;

procedure TestTBanco.TearDown;
begin
  FBanco.Free;
  FBanco := nil;
end;

procedure TestTBanco.TestDigitoNumeroComEspacos;
begin
  FBanco.DigitoNumero := ' 9 ';
  CheckEquals('9', FBanco.DigitoNumero, 'Dígito do número do banco inválido!');
end;

procedure TestTBanco.TestNumeroBancoComCaracteresInvalidos;
begin
  StartExpectingException(ExceptionClass);
  FBanco.Numero := 'a001';
  StopExpectingException('Nenhuma excessão gerada quando número do banco contém letras');
end;

procedure TestTBanco.TestNumeroBancoComEspacos;
begin
  FBanco.Numero := ' 001 ';
  CheckEquals('001', FBanco.Numero, 'Número do banco inválido!');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTBanco.Suite);
end.

