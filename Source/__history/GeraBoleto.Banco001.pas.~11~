unit GeraBoleto.Banco001;

interface

uses
  GeraBoleto.Base,
  GeraBoleto.Boleto;

const
  DIGITO_NUMERO = '9';

type
  TFormata001 = class(TInterfacedObject, IFormatacao)
  private
    FBoleto: IBoleto;
  public
    constructor Create(ABoleto: IBoleto);

    procedure FormataCamposConta;
    procedure ValidaDados;
    procedure FormataCampoLivre;
  end;

  TFactoryBBFormata = class
  public
    class function GetFormatacaoCampoLivre(AConvenio: string): IFormataCampoLivre;
  end;

  TBBNossoNumero11Posicoes = class(TInterfacedObject, IFormataCampoLivre)
    procedure Formata(ABoleto: IBoleto);
  end;

  TBBNossoNumero17Posicoes = class(TInterfacedObject, IFormataCampoLivre)
    procedure Formata(ABoleto: IBoleto);
  end;


implementation

uses
  GeraBoleto.Funcoes,
  System.SysUtils;

{ TFormata001 }

constructor TFormata001.Create(ABoleto: IBoleto);
begin
  FBoleto := ABoleto;
end;

procedure TFormata001.FormataCampoLivre;
begin

end;

procedure TFormata001.FormataCamposConta;
begin
  FBoleto.GetConta.Agencia := LeftPad(FBoleto.GetConta.Agencia, 4);
  FBoleto.GetConta.Conta := LeftPad(FBoleto.GetConta.Conta, 8);
end;

procedure TFormata001.ValidaDados;
begin
  if FBoleto.GetConta.Banco.DigitoNumero <> DIGITO_NUMERO then
    raise Exception.Create('Digito do número do banco inválido!');
end;

{ TFactoryBBFormata }

class function TFactoryBBFormata.GetFormatacaoCampoLivre(AConvenio: string): IFormataCampoLivre;
begin
  case AConvenio.Length of
    4, 6: Result := TBBNossoNumero11Posicoes.Create();
    7: Result := TBBNossoNumero17Posicoes.Create();
  else
    raise Exception.Create('Convênio inválido!');
  end;
end;

end.
