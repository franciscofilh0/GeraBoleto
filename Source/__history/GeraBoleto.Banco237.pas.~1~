unit GeraBoleto.Banco237;

interface

uses
  GeraBoleto.Base,
  GeraBoleto.Boleto;

const
  DIGITO_NUMERO = '9';

type
  TFormata001 = class(TInterfacedObject, IFormatacao)
  private
    FBoleto: IBoleto;
  public
    constructor Create(ABoleto: IBoleto);

    procedure FormataCamposConta;
    procedure ValidaDados;
    procedure FormataCampoLivre;
  end;

  TFactoryBBFormata = class
  public
    class function GetFormatacaoCampoLivre(AConvenio: string): IFormataCampoLivre;
  end;

  TBBNossoNumero11Posicoes = class(TInterfacedObject, IFormataCampoLivre)
    procedure Formata(ABoleto: IBoleto);
  end;

  TBBNossoNumero17Posicoes = class(TInterfacedObject, IFormataCampoLivre)
    procedure Formata(ABoleto: IBoleto);
  end;


implementation

uses
  GeraBoleto.Funcoes,
  System.SysUtils;

{ TFormata001 }

function Modulo11BB(Valor: string; Base: Integer = 9): string;
var
  Soma: Integer;
  Contador, Peso, Resto: Integer;
begin
  Soma := 0;
  Peso := Base;

  for Contador := Length(Valor) - 1 downto 1 do
  begin
    Soma := Soma + (StrToInt(Valor[Contador]) * Peso);

    if Peso > 2 then
      Peso := Peso - 1
    else
      Peso := Base;
  end;

  Resto := Soma mod 11;

  if Resto = 10 then
    Result := 'X'
  else
    Result := IntToStr(Resto);
end;

constructor TFormata001.Create(ABoleto: IBoleto);
begin
  FBoleto := ABoleto;
end;

procedure TFormata001.FormataCampoLivre;
begin
  TFactoryBBFormata.GetFormatacaoCampoLivre(FBoleto.GetConta.Convenio).Formata(FBoleto);
end;

procedure TFormata001.FormataCamposConta;
begin
  FBoleto.GetConta.Agencia := LeftPad(FBoleto.GetConta.Agencia, 4);
  FBoleto.GetConta.Conta := LeftPad(FBoleto.GetConta.Conta, 8);
end;

procedure TFormata001.ValidaDados;
begin
  if FBoleto.GetConta.Banco.DigitoNumero <> DIGITO_NUMERO then
    raise Exception.Create('Digito do número do banco inválido!');
end;

{ TFactoryBBFormata }

class function TFactoryBBFormata.GetFormatacaoCampoLivre(AConvenio: string): IFormataCampoLivre;
begin
  case AConvenio.Length of
    4, 6: Result := TBBNossoNumero11Posicoes.Create();
    7: Result := TBBNossoNumero17Posicoes.Create();
  else
    raise Exception.Create('Convênio inválido!');
  end;
end;

{ TBBNossoNumero11Posicoes }

procedure TBBNossoNumero11Posicoes.Formata(ABoleto: IBoleto);
begin
  ABoleto.GetTitulo.NossoNumero := ABoleto.GetConta.Convenio +
                                   LeftPad(ABoleto.GetConta.SeqNossoNumero.ToString(), 11 - Length(ABoleto.GetConta.Convenio));

  ABoleto.GetTitulo().DigitoNossoNumero := Modulo11BB(ABoleto.GetTitulo().NossoNumero);

  ABoleto.SetCampoLivre(ABoleto.GetTitulo.NossoNumero +
                        ABoleto.GetConta().Agencia +
                        ABoleto.GetConta().Conta +
                        ABoleto.GetConta.Carteira);
end;

{ TBBNossoNumero17Posicoes }

procedure TBBNossoNumero17Posicoes.Formata(ABoleto: IBoleto);
begin
  ABoleto.GetTitulo().NossoNumero := ABoleto.GetConta.Convenio +
                                     LeftPad(ABoleto.GetConta().SeqNossoNumero.ToString(), 10);
  ABoleto.SetCampoLivre( LeftPad('0', 6) + ABoleto.GetTitulo().NossoNumero + ABoleto.GetConta().Carteira );

end;

end.
